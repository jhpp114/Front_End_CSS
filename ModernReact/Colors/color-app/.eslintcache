[{"/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/index.js":"1","/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/components/palette/palette.component.js":"2","/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/App.js":"3","/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/components/colorbox/colorbox.component.js":"4","/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/reportWebVitals.js":"5","/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/colorHelper.js":"6","/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/seedColors.js":"7","/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/components/navbar/navbar.component.js":"8","/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/components/palettes/palettes.component.js":"9"},{"size":590,"mtime":1611118104414,"results":"10","hashOfConfig":"11"},{"size":1522,"mtime":1611116822045,"results":"12","hashOfConfig":"11"},{"size":968,"mtime":1611119603310,"results":"13","hashOfConfig":"11"},{"size":1749,"mtime":1611116119570,"results":"14","hashOfConfig":"11"},{"size":362,"mtime":1611088400159,"results":"15","hashOfConfig":"11"},{"size":1516,"mtime":1611116123169,"results":"16","hashOfConfig":"11"},{"size":10526,"mtime":1611088929785,"results":"17","hashOfConfig":"11"},{"size":3552,"mtime":1611115423896,"results":"18","hashOfConfig":"11"},{"size":831,"mtime":1611120546753,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16kdum1",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/index.js",[],"/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/components/palette/palette.component.js",[],"/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/App.js",[],"/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/components/colorbox/colorbox.component.js",[],"/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/reportWebVitals.js",[],"/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/colorHelper.js",[],"/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/seedColors.js",["39"],"/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/components/navbar/navbar.component.js",["40"],"import React, { Component } from 'react';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport './navbar.style.css';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nclass navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            format: \"hex\",\r\n            open: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.closeSnackbar = this.closeSnackbar.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            format: event.target.value,\r\n            open: true\r\n        });\r\n        this.props.formatChange(event.target.value);\r\n    }\r\n\r\n    closeSnackbar() {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { level, changeLevel } = this.props;\r\n        return (\r\n            <nav className='navbar'>\r\n                <div className='logo'>\r\n                    <a href=\"#\">ReactColorApp</a>\r\n                </div>\r\n                <div className='nav-container'>\r\n                    <span>Level: {level}</span>\r\n                    <div className='slider'>\r\n                        \r\n                        <Slider\r\n                            min={100} \r\n                            max={900} \r\n                            step={100} \r\n                            defaultValue={level}\r\n                            onAfterChange={changeLevel}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='select-container'>\r\n                    <Select\r\n                        value={this.state.format}\r\n                        onChange={(event)=> this.handleChange(event)}\r\n                    >\r\n                        <MenuItem value=\"hex\">\r\n                            <em>HEX - Ex: #ffffff</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"rgb\">\r\n                            <em>RGB - Ex: rgb(255,255,255)</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"rgba\">\r\n                            <em>RGBA - Ex: rgba(255,255,255,1.0)</em>\r\n                        </MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                      }}\r\n                    autoHideDuration={3000}\r\n                    message={<span id='message-id'>Format Changed!</span>}\r\n                    open={this.state.open}\r\n                    ContentProps = {\r\n                        {\"aria-describedby\": \"message-id\"}\r\n                    }\r\n                    onClose={this.closeSnackbar}\r\n                    action={\r\n                        [\r\n                            <IconButton\r\n                                onClick={this.closeSnackbar}\r\n                                key='close'\r\n                                aria-label='close'\r\n                                color='inherit'\r\n                            >\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                        ]\r\n                    }\r\n                />\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default navbar;\r\n","/mnt/c/Users/jhpp1/Desktop/Front_End_CSS/ModernReact/Colors/color-app/src/components/palettes/palettes.component.js",[],{"ruleId":"41","severity":1,"message":"42","line":1,"column":1,"nodeType":"43","endLine":244,"endColumn":5},{"ruleId":"44","severity":1,"message":"45","line":41,"column":21,"nodeType":"46","endLine":41,"endColumn":33},"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]